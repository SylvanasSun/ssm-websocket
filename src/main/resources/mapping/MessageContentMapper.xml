<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sylvanas.websocket.dao.MessageContentMapper">
  <resultMap id="BaseResultMap" type="com.sylvanas.websocket.pojo.MessageContent">
    <id column="m_id" jdbcType="INTEGER" property="mId" />
    <result column="m_name" jdbcType="VARCHAR" property="mName" />
    <result column="m_content" jdbcType="VARCHAR" property="mContent" />
    <result column="m_createdtime" jdbcType="TIMESTAMP" property="mCreatedtime" />
    <result column="m_updatedtime" jdbcType="TIMESTAMP" property="mUpdatedtime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    m_id, m_name, m_content, m_createdtime, m_updatedtime
  </sql>
  <select id="selectByExample" parameterType="com.sylvanas.websocket.pojo.MessageContentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from message_content
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="findAll" parameterType="String" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    FROM message_content
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from message_content
    where m_id = #{mId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from message_content
    where m_id = #{mId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sylvanas.websocket.pojo.MessageContentExample">
    delete from message_content
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sylvanas.websocket.pojo.MessageContent">
    insert into message_content (m_id, m_name, m_content, 
      m_createdtime, m_updatedtime)
    values (#{mId,jdbcType=INTEGER}, #{mName,jdbcType=VARCHAR}, #{mContent,jdbcType=VARCHAR}, 
      #{mCreatedtime,jdbcType=TIMESTAMP}, #{mUpdatedtime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.sylvanas.websocket.pojo.MessageContent">
    insert into message_content
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="mId != null">
        m_id,
      </if>
      <if test="mName != null">
        m_name,
      </if>
      <if test="mContent != null">
        m_content,
      </if>
      <if test="mCreatedtime != null">
        m_createdtime,
      </if>
      <if test="mUpdatedtime != null">
        m_updatedtime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="mId != null">
        #{mId,jdbcType=INTEGER},
      </if>
      <if test="mName != null">
        #{mName,jdbcType=VARCHAR},
      </if>
      <if test="mContent != null">
        #{mContent,jdbcType=VARCHAR},
      </if>
      <if test="mCreatedtime != null">
        #{mCreatedtime,jdbcType=TIMESTAMP},
      </if>
      <if test="mUpdatedtime != null">
        #{mUpdatedtime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sylvanas.websocket.pojo.MessageContentExample" resultType="java.lang.Integer">
    select count(*) from message_content
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update message_content
    <set>
      <if test="record.mId != null">
        m_id = #{record.mId,jdbcType=INTEGER},
      </if>
      <if test="record.mName != null">
        m_name = #{record.mName,jdbcType=VARCHAR},
      </if>
      <if test="record.mContent != null">
        m_content = #{record.mContent,jdbcType=VARCHAR},
      </if>
      <if test="record.mCreatedtime != null">
        m_createdtime = #{record.mCreatedtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.mUpdatedtime != null">
        m_updatedtime = #{record.mUpdatedtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update message_content
    set m_id = #{record.mId,jdbcType=INTEGER},
      m_name = #{record.mName,jdbcType=VARCHAR},
      m_content = #{record.mContent,jdbcType=VARCHAR},
      m_createdtime = #{record.mCreatedtime,jdbcType=TIMESTAMP},
      m_updatedtime = #{record.mUpdatedtime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sylvanas.websocket.pojo.MessageContent">
    update message_content
    <set>
      <if test="mName != null">
        m_name = #{mName,jdbcType=VARCHAR},
      </if>
      <if test="mContent != null">
        m_content = #{mContent,jdbcType=VARCHAR},
      </if>
      <if test="mCreatedtime != null">
        m_createdtime = #{mCreatedtime,jdbcType=TIMESTAMP},
      </if>
      <if test="mUpdatedtime != null">
        m_updatedtime = #{mUpdatedtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where m_id = #{mId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sylvanas.websocket.pojo.MessageContent">
    update message_content
    set m_name = #{mName,jdbcType=VARCHAR},
      m_content = #{mContent,jdbcType=VARCHAR},
      m_createdtime = #{mCreatedtime,jdbcType=TIMESTAMP},
      m_updatedtime = #{mUpdatedtime,jdbcType=TIMESTAMP}
    where m_id = #{mId,jdbcType=INTEGER}
  </update>
</mapper>